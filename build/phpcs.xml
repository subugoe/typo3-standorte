<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="TYPO3">
  <rule ref="Generic.CodeAnalysis.EmptyStatement.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Commenting.Todo.TaskFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Files.LineEndings.InvalidEOLChar">
    <priority>warning</priority>
    <severity>warning</severity>
    <properties>
      <property name="eolChar" value="aa" />
    </properties>
  </rule>
  <rule ref="Generic.Files.LineLength.MaxExceeded">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Formatting.MultipleStatementAlignment.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Formatting.NoSpaceAfterCast.SpaceFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Formatting.SpaceAfterCast.NoSpace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Formatting.SpaceAfterCast.TooMuchSpace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.CallTimePassByReference.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Metrics.CyclomaticComplexity.MaxExceeded">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Metrics.NestingLevel.MaxExceeded">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.NamingConventions.ConstructorName.OldStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.NamingConventions.ConstructorName.OldStyleCall">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.DisallowShortOpenTag.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.ForbiddenFunctions.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.LowerCaseConstant.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.NoSilencedErrors.Forbidden">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.NoSilencedErrors.Discouraged">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.PHP.UpperCaseConstant.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.Strings.UnnecessaryStringConcat.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.VersionControl.SubversionProperties.Unexpected">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.VersionControl.SubversionProperties.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.VersionControl.SubversionProperties.NoMatch">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.VersionControl.SubversionProperties.">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent.TabsUsed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.WhiteSpace.ScopeIndent.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Generic.WhiteSpace.ScopeIndent.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.ChannelException.WrongExceptionType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.DisallowSelfActions.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.IncludeSystem.NotIncludedCall">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.IncludeSystem.NotIncludedExtends">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.IncludeSystem.NotIncludedCall">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Channels.UnusedSystem.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.ApiNotFirst">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.ApiSpacing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.ApiTagSpacing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.TagNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.ApiNotLast">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Commenting.FunctionComment.ApiTagIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.CSS.BrowserSpecificStyles.ForbiddenStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Debug.DebugCode.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Debug.FirebugConsole.ConflictFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.AssignThis.NotSelf">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.CreateWidgetTypeCallback.FirstArgNotCallback">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.CreateWidgetTypeCallback.ReturnValue">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.CreateWidgetTypeCallback.FirstArgNotSelf">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.CreateWidgetTypeCallback.NoReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.CreateWidgetTypeCallback.CallbackNotCalled">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Objects.DisallowNewWidget.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.PHP.EvalObjectFactory.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.PHP.GetRequestData.WithVar">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.PHP.ReturnFunctionValue.NotAssigned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="MySource.Strings.JoinStrings.ArrayNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Classes.ClassDeclaration.MissingBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Classes.ClassDeclaration.OpenBraceNewLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Classes.ClassDeclaration.OpenBraceWrongLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Classes.ClassDeclaration.OpenBraceNotAlone">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Classes.ClassDeclaration.SpaceBeforeBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.SpacingAfterShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.EmptyVersion">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.InvalidVersion">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.DescriptionSpacing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.MissingVersion">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.MissingTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.DuplicateTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.TagsNotGrouped">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.WrongTagOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.TagIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidCategory">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyCategory">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidPackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyPackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidSubpackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptySubpackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidAuthors">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyAuthors">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.CopyrightHyphen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidCopyright">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyCopyright">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyCopyright">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyLicense">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.EmptyVersion">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.InvalidVersion">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.EmptyThrows">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.EmptyReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterParams">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeParams">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeParamType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ParameterNamesNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.cod">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ExtraParamComment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamComment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterLongType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterLongName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Commenting.InlineComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.ControlStructures.MultiLineCondition.Alignment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.BracketsNotRequired">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseIncludeOnce">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseInclude">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Files.IncludingFile.UseRequire">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Formatting.MultiLineAssignment.EqualSignLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Formatting.MultiLineAssignment.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionDeclaration.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionDeclaration.cod">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionDeclaration.CloseBracketLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.Functions.ValidDefaultValue.NotAtEnd">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidClassName.StartWithCaptial">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidClassName.Invalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidClassName.Invalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.PublicUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionInvalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.NamingConventions.ValidVariableName.PublicUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.Line">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="PEAR.WhiteSpace.ScopeIndent.">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayBracketSpacing.SpaceAfterBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NotLowerCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceAfterKeyword">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoSpaceBeforeDoubleArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoSpaceAfterDoubleArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceAfterDoubleArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoSpaceAfterComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceAfterComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoKeySpecified">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.KeySpecified">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.MultipleClasses">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceBeforeKeyword">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpacesBeforeKeyword">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.MissingBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.NewLineBeforeCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceBeforeCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.NewlinesAfterCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.CloseBraceSameLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceAfterKeyword">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceAfterName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.NoSpaceBeforeName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceBeforeName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassDeclaration.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassFileName.NoMatch">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.DuplicateProperty.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.LowercaseClassKeywords.FoundUppercase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.SelfMemberReference.IncorrectCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.SelfMemberReference.NotUsed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.SelfMemberReference.SpaceBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.SelfMemberReference.SpaceAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ValidClassName.MissingBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.SingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.NoNewLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.HasEmptyLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.FirstLineIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.NoCaptial">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.LineIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.LastLineIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.HasEmptyLineBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.NoEmptyLineBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.BlockComment.NoEmptyLineAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.MissingShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.LongNotCaptial">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.ShortSingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.ShortNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.ShortFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.TagNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClassComment.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClosingDeclarationComment.Abstract">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClosingDeclarationComment.MissingBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.ClosingDeclarationComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.DocCommentAlignment.NoSpaceBeforeTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.DocCommentAlignment.SpaceBeforeTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.EmptyCatchComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingAfterComment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.ContentAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.LongNotCaptial">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.ShortSingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.ShortNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.ShortFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.TagNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.DuplicateTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.TagOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.TagIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingPackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectPackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingSubpackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectSubpackage">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingAuthor">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectAuthor">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingCopyright">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectCopyright">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingLicense">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingLinceseURL">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectLicenseURL">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.MissingLinceseName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FileComment.IncorrectLicenseName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ContentAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.LongNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ShortSingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ShortNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ShortFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SeeOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.EmptySee">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SeeIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.DuplicateReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ReturnOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingReturnType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidReturnVoid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidNoReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ReturnIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingReturn">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ReturnNotRequired">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidThrows">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.EmptyThrows">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ThrowsNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ThrowsNoFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ThrowsOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParams">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingBeforeParams">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingBeforeParamType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ParameterNamesNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.IncorrectParamVarName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.IncorrectTypeHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.InvalidTypeHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.cod">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ExtraParamComment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingParamName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingParamType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ParamCommentNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.ParamCommentFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterLongType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterLongName">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionComment.TagNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag.FailedParse">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag.WrongType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.DocBlock">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.WrongStyle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.NoSpaceBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.NotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.InvalidEndChar">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.InlineComment.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.LongConditionClosingComment.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.LongConditionClosingComment.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.LongConditionClosingComment.Invalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.PostStatementComment.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.ContentAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.MissingShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.SpacingBeforeShort">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.LongNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.ShortSingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.ShortNotCapital">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.ShortFullStop">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.SpacingBeforeTags">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.TagNotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.DuplicateVar">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.VarOrder">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.MissingVarType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.IncorrectVarType">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.VarIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.MissingVar">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.EmptySees">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Commenting.VariableComment.SeesIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ElseIfDeclaration.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.NoBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.CaseIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColon">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.BreakIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultNotLower">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeDefaultColon">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.BreakIndent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyDefault">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefault">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.MissingDefault">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.SwitchDeclaration.MissingCase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionNameSpacing.BlankLinesFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace.Before">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColonSpacing.Before">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColonSpacing.NoneAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColonSpacing.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColonSpacing.AfterNewline">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColourDefinition.NotUpper">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.ColourDefinition.Shorthand">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.DuplicateClassDefinition.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.DuplicateStyleDefinition.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.EmptyClassDefinition.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.EmptyStyleDefinition.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Indentation.BlankLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Indentation.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.LowercaseStyleDefinition.FoundUpper">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.MissingColon.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Opacity.Invalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Opacity.SpacingAfterPoint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Opacity.PointNotRequired">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Opacity.StartWithPoint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.Opacity.Invalid">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.SemicolonSpacing.NotAtEnd">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.CSS.SemicolonSpacing.SpaceFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Files.FileExtension.ClassFound">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Files.FileExtension.NoClass">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Formatting.OperatorBracket.SpacingAfterMinus">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Formatting.OperatorBracket.MissingBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Formatting.OperatorBracket.MissingBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Formatting.OperatorBracket.MissingBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Formatting.OperatorBracket.MissingBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSapceBeforeHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpenHint">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDuplicateArgument.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.GlobalFunction.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ConstantCase.">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidFunctionName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.NamingConventions.ValidVariableName.StringNotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Objects.DisallowObjectStringIndex.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Objects.ObjectInstantiation.NotAssigned">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Objects.ObjectMemberComma.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.ComparisonOperatorUsage.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.IncrementDecrementUsage.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.IncrementDecrementUsage.NoBrackets">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.IncrementDecrementUsage.">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Operators.ValidLogicalOperators.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.CommentedOutCode.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.DisallowComparisonAssignment.AssignedComparison">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.DisallowComparisonAssignment.AssignedBool">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.DisallowMultipleAssignments.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.ContentAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.ContentAfterEnd">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.Empty">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.SpacingAfterOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSemicolon">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.MultipleStatements">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.SpacingBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.Eval.Discouraged">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.GlobalKeyword.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.Heredoc.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.InnerFunctions.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.LowercasePHPFunctions.KeywordUppercase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.PHP.LowercasePHPFunctions.CallUppercase">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Scope.MemberVarScope.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Scope.MethodScope.Missing">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Scope.StaticThisUsage.Found">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.Strings.EchoedStrings.HasBracket">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.CastSpacing.ContainsWhiteSpace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionSpacing.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionSpacing.Before">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing.IncorrectSingle">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.MemberVarSpacing.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing.Before">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.NoSpaceBeforeAmp">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.SpacingBeforeAmp">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfterAmp">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.SpacingAfterAmp">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.SpacingBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.OperatorSpacing.SpacingAfter">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing.Before">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing.After">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace.Indent">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing.Incorrect">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.Files.ClosingTag.NotAllowed">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.NotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.PublicHasUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
  <rule ref="Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps">
    <priority>warning</priority>
    <severity>warning</severity>
  </rule>
</ruleset>

